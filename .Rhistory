res = rstudent(modelo_fac3)
ks.test(res,"pnorm")
modelo_fac3 = lm(`Bem estar` ~ Tratamento + mangueira , data = base_fatores)
summary(modelo_fac3)
### Analise dos residuos
res = rstudent(modelo_fac3)
ks.test(res,"pnorm")
modelo_fac3 = lm(`Bem estar` ~ Tratamento + mangueira + homem , data = base_fatores)
summary(modelo_fac3)
### Analise dos residuos
res = rstudent(modelo_fac3)
ks.test(res,"pnorm")
modelo_fac3 = lm(`Bem estar` ~ Tratamento + mangueira + homem + mora_pai_mae, data = base_fatores)
summary(modelo_fac3)
### Analise dos residuos
res = rstudent(modelo_fac3)
ks.test(res,"pnorm")
modelo_fac3 = lm(`Bem estar` ~ Tratamento + mangueira + homem + mora_pai_mae + filhos , data = base_fatores)
summary(modelo_fac3)
### Analise dos residuos
res = rstudent(modelo_fac3)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento , data = base_fatores)
summary(modelo_fac2)
### Analise dos residuos
res = rstudent(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento + mangueira, data = base_fatores)
summary(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento + mangueira+
branco, data = base_fatores)
summary(modelo_fac2)
ks.test(res,"pnorm")
## Fator 2
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento + mangueira+
branco + homem , data = base_fatores)
summary(modelo_fac2)
### Analise dos residuos
res = rstudent(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento + mangueira+
branco + homem + mora_pai_mae , data = base_fatores)
summary(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ Tratamento + mangueira+
branco + homem + mora_pai_mae + filhos, data = base_fatores)
summary(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~ escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac2)
### Analise dos residuos
res = rstudent(modelo_fac2)
ks.test(res,"pnorm")
modelo_fac2 = lm(`Auto capacidade` ~  filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac2)
ks.test(res,"pnorm")
## Fator 2
modelo_fac2 = lm(`Auto capacidade` ~ mora_pai_mae + filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
### Analise dos residuos
res = rstudent(modelo_fac2)
ks.test(res,"pnorm")
## Fator 2
modelo_fac2 = lm(`Auto capacidade` ~  homem + mora_pai_mae + filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
### Analise dos residuos
res = rstudent(modelo_fac2)
ks.test(res,"pnorm")
summary(modelo_fac1)
## Fator 2
modelo_fac2 = lm(`Auto capacidade` ~  Tratamento + mangueira+
branco + homem + mora_pai_mae + filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac2)
## Fator 3
modelo_fac3 = lm(`Bem estar` ~ Tratamento + mangueira + homem + mora_pai_mae + filhos + branco + escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac3)
## Fator 4
modelo_fac4 = lm(`Estudos e finanças` ~ Tratamento + mangueira+
branco + homem + mora_pai_mae + filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac4)
## Fator 5
modelo_fac5 = lm(`Sentimento de incapacidade` ~ Tratamento + mangueira+
branco + homem + mora_pai_mae + filhos + escolaridade_1 + escolaridade_2, data = base_fatores)
summary(modelo_fac5)
#Pacote necessários
library(readxl)
library(psych)
library(GPArotation)
library(tidyverse)
library(lmtest)
library(MASS)
library(gridExtra)
library(forecast)
library(nortest)
library(glmnet)
library(xtable)
step(lm(`Auto capacidade` ~ . , data= base_fatores[,-c(1,3,9,10,11,12,13)]),
direction="both")
(0.04676+0.04079+0.007445+0.01966+0.01655)/5
install.packages("xtable")
install.packages("GGally")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
library(tinytex)
tinytex::tlmgr_update()
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
install.packages("tinytex")
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
\command{tlmgr}
tlmgr()
library(tinytex)
#
#  holy <- as.data.frame(na.omit(covid_deaths$weekly_hosp_admissions_per_million))
# dplyr::distinct(holy)
# as.logical(holy$`na.omit(covid_deaths$weekly_hosp_admissions_per_million)`)
#
#
# update.packages(ask = FALSE, checkBuilt = TRUE)
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
# tlmgr()
tinytex::parse_packages(
text = "! LaTeX Error: File `kth-footer' not found."
)
#   geom_histogram(bins=30)
#  mean(c( 6967, 145086400-144389700, 14438970-14369300, 1436930-1429964, 1429964-1422997, 1422997-1416030, 1416030-1409064, 1409064-1402097, 1402097-1395130, 1395130-1388164,1388164-1381197))
#
#
#  holy <- as.data.frame(na.omit(covid_deaths$weekly_hosp_admissions_per_million))
# dplyr::distinct(holy)
# as.logical(holy$`na.omit(covid_deaths$weekly_hosp_admissions_per_million)`)
#
#
# update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
#  mean(c( 6967, 145086400-144389700, 14438970-14369300, 1436930-1429964, 1429964-1422997, 1422997-1416030, 1416030-1409064, 1409064-1402097, 1402097-1395130, 1395130-1388164,1388164-1381197))
#
#
#  holy <- as.data.frame(na.omit(covid_deaths$weekly_hosp_admissions_per_million))
# dplyr::distinct(holy)
# as.logical(holy$`na.omit(covid_deaths$weekly_hosp_admissions_per_million)`)
#
#
# update.packages(ask = FALSE, checkBuilt = TRUE)
# tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
#Pacote necessários
library(readxl)
library(psych)
library(GPArotation)
library(tidyverse)
library(lmtest)
library(MASS)
library(gridExtra)
library(forecast)
library(nortest)
library(glmnet)
library(xtable)
library(GGally)
library(gridExtra)
options(echo=FALSE)
### Importacao e tratamento dos dados
Base_Final <- read_excel("Base_Final.xlsx")
### Importacao e tratamento dos dados
Base_Final <- read_excel("Base_Final.xlsx")
#Pacote necessários
library(readxl)
library(psych)
library(GPArotation)
library(tidyverse)
library(lmtest)
library(MASS)
library(gridExtra)
library(forecast)
library(nortest)
library(glmnet)
library(xtable)
library(GGally)
library(gridExtra)
options(echo=FALSE)
### Importacao e tratamento dos dados
Base_Final <- read_excel("Base_Final.xlsx")
### Importacao e tratamento dos dados
Base_Final <- read_excel("C:/Users/igorg/Downloads/Base_Final.xlsx")
### Importacao e tratamento dos dados
Base_Final <- read_excel("C:/Users/igorg/Downloads/Base_Final.xls")
Base_Final = na.omit(Base_Final)
### Selecionando as respostas do questionario
questionario = Base_Final[,c(4:20)]
View(Base_Final)
library(readr)
library(ggplot2)
library(dplyr)
base <- read_csv('marketing_campaign.csv')
View(base)
library(readr)
library(ggplot2)
library(dplyr)
base <- read_csv2('marketing_campaign.csv')
View(base)
head(base)
library(readr)
library(ggplot2)
library(dplyr)
base <- read_csv2('marketing_campaign.csv')
head(base)
library(readr)
library(ggplot2)
library(dplyr)
head(base)
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
ggplot(aes(x=Education))+
geom_bar()
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n())
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n()) |>
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
## Perfil de relacionamento do cliente que aceitou pelo menos 1 campanha
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Marital_Status) |>
summarise(n=n()) |>
ggplot(aes(x=Marital_Status, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
## Perfil de reclamação do cliente que aceitou pelo menos 1 campanha
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Complain) |>
summarise(n=n()) |>
ggplot(aes(x=Complain, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Complain) |>
summarise(n=n()) |>
ggplot(aes(x=Complain, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Complain) |>
summarise(n=n()) |>
ggplot(aes(x=Complain, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Marital_Status) |>
summarise(n=n()) |>
ggplot(aes(x=Marital_Status, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5)
base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Education) |>
summarise(n=n()) |>
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou nenhuma campanha")
## Perfil de educação do cliente que aceitou pelo menos 1 campanha
base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n()) |>
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou ao menos 1 campanha")
dados <- base |>
mutate(aceitar = ifelse(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1), 'Aceitou', 'Não aceitou') |>
select(aceitar, Education)
dados <- base |>
mutate(aceitar = ifelse(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1, 'Aceitou', 'Não aceitou')) |>
select(aceitar, Education)
View(dados)
kruskal.test(aceitar ~ Education, data=dados)
library(gridExtra)
grid.arrange(g1,g2,nrow=2)
## Perfil de educação do cliente que aceitou pelo menos 1 campanha
g1 <- base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n()) |>
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou ao menos 1 campanha")
## Perfil de educação do cliente que aceitou nenhuma campanha
g2 <- base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Education) |>
summarise(n=n()) |>
ggplot(aes(x=Education, y =n))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = n),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou nenhuma campanha")
grid.arrange(g1,g2,nrow=2)
## Perfil de educação do cliente que aceitou pelo menos 1 campanha
g1 <- base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n()) |>
mutate(pct = n/sum(n),
rotulo = scales::percent(pct)) |>
ggplot(aes(x=Education, y =pct))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = rotulo),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou ao menos 1 campanha")
## Perfil de educação do cliente que aceitou nenhuma campanha
g2 <- base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Education) |>
summarise(n=n()) |>
mutate(pct = n/sum(n),
rotulo = scales::percent(pct)) |>
ggplot(aes(x=Education, y =pct))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = rotulo),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou nenhuma campanha")
grid.arrange(g1,g2,nrow=2)
## Perfil de educação do cliente que aceitou pelo menos 1 campanha
g1 <- base |>
filter(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1) |>
group_by(Education) |>
summarise(n=n()) |>
mutate(pct = n/sum(n),
rotulo = scales::percent(pct)) |>
ggplot(aes(x=Education, y =pct))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = rotulo),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou ao menos 1 campanha")
## Perfil de educação do cliente que aceitou nenhuma campanha
g2 <- base |>
filter(AcceptedCmp1 == 0 & AcceptedCmp2 == 0 & AcceptedCmp3 == 0 & AcceptedCmp4 == 0 & AcceptedCmp5 == 0 & Response == 0) |>
group_by(Education) |>
summarise(n=n()) |>
mutate(pct = n/sum(n),
rotulo = scales::percent(pct)) |>
ggplot(aes(x=Education, y =pct))+
geom_bar(stat='identity',
fill="blue") +
geom_text(aes(label = rotulo),
vjust=-0.5) +
labs(x="Educação", y="Frequência",
title="Aceitou nenhuma campanha")
grid.arrange(g1,g2,ncol=2)
comp1 <- base |>
mutate(aceitar = ifelse(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1, 'Aceitou', 'Não aceitou')) |>
select(aceitar, Education) |>
filter(Education == 'PhD', aceitar = 'Aceitou')
comp1 <- base |>
mutate(aceitar = ifelse(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1, 'Aceitou', 'Não aceitou')) |>
select(aceitar, Education) |>
filter(Education == 'PhD', aceitar == 'Aceitou')
comp2 <- base |>
mutate(aceitar = ifelse(AcceptedCmp1 == 1 | AcceptedCmp2 == 1 | AcceptedCmp3 == 1 | AcceptedCmp4 == 1 | AcceptedCmp5 == 1 | Response == 1, 'Aceitou', 'Não aceitou')) |>
select(aceitar, Education) |>
filter(Education == 'PhD', aceitar == 'Não aceitou')
wilcox.test(comp1, comp2, alternative = "greater")
wilcox.test(comp1$Education, comp2$Education, alternative = "greater")
library(readr)
library(ggplot2)
library(dplyr)
library(gridExtra)
base <- read_csv2('Dados_matchgroup.csv')
head(base)
library(readr)
library(ggplot2)
library(dplyr)
library(gridExtra)
base <- read_csv('Dados_matchgroup.csv')
head(base)
(671-538))
(((1339-1072)/1072)+
((1560-1249)/1249)+
((1652-1323)/1323)+
((623-500)/500)+
((671-538)/538))/5
(((1339-1072)/1072)+
((1560-1249)/1249)+
((1652-1323)/1323)+
((623-500)/500)+
((671-538)/538))/5
# as.logical(holy$`na.omit(covid_deaths$weekly_hosp_admissions_per_million)`)
#
#
# update.packages(ask = FALSE, checkBuilt = TRUE)
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
# tlmgr()
# tinytex::parse_packages(
#   text = "! LaTeX Error: File `kth-footer' not found."
# )
(((1339-1072)/1072)+((1560-1249)/1249)+((1652-1323)/1323)+((623-500)/500)+((671-538)/538))/5
{library(CARBayesdata)
library(sp)
library(dplyr)
library(sf)
library(ggplot2)
library(spdep)
library(spatialreg)
library(rgdal)
library(leaflet)
library(readxl)
library(gridExtra)}
RJ= st_read("RJ_Municipios_2020.shp")
analfabetismo = read_excel("analfabetismo_rj.xlsx")
desemprego = read_excel("desemprego_rj.xlsx")
trab_infantil = read_excel("trab_infantil_rj.xlsx")
# nascimentos = read_excel("nascimentos_rj.xlsx")
# populacao = read_excel("populacao_rj.xlsx")
base = analfabetismo |>
left_join(desemprego) |>
left_join(trab_infantil)
# Carregando os dados
RJ= st_read("RJ_Municipios_2020.shp")
# Carregando os dados
RJ= st_read("RJ_Municipios_2020.shp")
setwd("C:/Users/igorg/Documents/GitHub/Desafio3_Espacial")
# Carregando os dados
RJ= st_read("RJ_Municipios_2020.shp")
analfabetismo = read_excel("analfabetismo_rj.xlsx")
desemprego = read_excel("desemprego_rj.xlsx")
trab_infantil = read_excel("trab_infantil_rj.xlsx")
base = analfabetismo |>
left_join(desemprego) |>
left_join(trab_infantil)
# juntando as informacoes numa base unica
base.sp <- merge(x=RJ, y=base, by="NM_MUN", all.x=FALSE)
# juntando as informacoes numa base unica
base.sp <- merge(x=RJ, y=base, by="NM_MUN", all.x=FALSE)
form <- log(tx_analfabetismo) ~ tx_desemprego + tx_trab_infant
model <- lm(formula=form, data=base.sp)
summary(model) # tx_analfabetismo variáveis significativas
AIC(model)
W.nb <- poly2nb(base.sp, row.names = rownames(base.sp))
W.list <- nb2listw(W.nb, style="B")
W.list
form <- log(tx_analfabetismo) ~ tx_desemprego + tx_trab_infant
nc_car <- spautolm(formula = form,
data = base.sp,
listw =  W.list,
family = "CAR")
summary(nc_car)
---
title: "Desafio III"
subtitle: "Estatística Espacial I"
author: "Igor Freitas e João Pedro Fernandes"
date: "Janeiro/2022"
header-includes: \usepackage{graphicx} \usepackage{titling} \usepackage{float} \floatplacement{figure}{H} \usepackage{array} \usepackage{indentfirst} \usepackage[portuguese]{babel} \usepackage{eso-pic} \usepackage{tikz}
output:
rmdformats::readthedown:
use_bookdown: true
fig_caption: true
html_document:
fig_height: 10
fig_width: 12.5
editor_options:
chunk_output_type: console
css: custom.css
---
\renewcommand{\tablename}{Tabela}
